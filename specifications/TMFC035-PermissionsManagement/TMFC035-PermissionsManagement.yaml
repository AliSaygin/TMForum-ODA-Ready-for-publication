apiVersion: oda.tmforum.org/v1beta2
kind: component
managementFunction:
  exposedAPIs:
  - apitype: prometheus
    implementation: '{{.Release.Name}}-{{.Values.component.name}}-sm'
    name: metrics
    path: /{{.Release.Name}}-{{.Values.component.name}}/metrics
    port: 4000
metadata:
  name: components.oda.tmforum.org
securityFunction:
  controllerRole: '{{ .Values.security.controllerRole }}'
  exposedAPIs:
  - apitype: openapi
    developerUI: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4/docs
    implementation: '{{.Release.Name}}-partyroleapi'
    name: partyrole
    path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4
    port: 8080
    specification: https://raw.githubusercontent.com/tmforum-apis/TMF669_PartyRole/master/TMF669-PartyRole-v4.0.0.swagger.json
spec:
  coreFunction:
    dependentAPIs:
    - apitype: openapi
      id: TMF632
      name: PartyManagement
      required: true
      resources:
      - individual:
        - GET
        - GET/id
      - organization:
        - GET
        - GET/id
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF632_PartyManagement/master/TMF632-PartyManagement-v4.0.0.swagger.json
      version: 4
    - apitype: openapi
      id: TMF701
      name: ProcessFlowManagement
      required: false
      resources:
      - processFlow:
        - POST
        - GET
        - GET /id
        - DELETE
      - taskFlow:
        - PATCH
        - GET
        - GET /id
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF701_ProcessFlow/master/TMF701-ProcessFlow-v4.0.0.swagger.json
      version: 4
    - apitype: openapi
      id: TMF688
      name: Event
      required: false
      resources:
      - event:
        - GET
        - GET /id
      specification: https://github.com/tmforum-apis/TMF688-Event/blob/master/TMF688-Event-v4.0.0.swagger.json
      version: 4
    exposedAPIs:
    - apitype: openapi
      developerUI: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/UserRoleAndPermissionManagement/v4/docs
      id: TMF672
      implementation: /{{.Release.Name}}-userrole&permapi
      name: UserRoleAndPermission
      path: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/UserRoleAndPermissionManagement/v4
      port: 8080
      required: true
      resources:
      - permission:
        - GET
        - GET/id
        - POST
        - PATCH/id
        - DELETE/id
      - userRole:
        - GET
        - GET/id
        - POST
        - PATCH/id
        - DELETE/id
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF672_UserRoleAndPermission/master/TMF672-UserRoleAndPermission-v4.0.0.swagger.json
      version: 4
    - apitype: openapi
      developerUI: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/PartyRoleManagement/v4/docs
      id: TMF669
      implementation: /{{.Release.Name}}-partyroleapi
      name: PartyRoleManagement
      path: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/PartyRoleManagement/v4
      port: 8080
      required: true
      resources:
      - partyRole:
        - GET
        - GET/id
        - POST
        - PATCH/id
        - DELETE/id
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF669_PartyRoleManagement/master/TMF672-PartyRoleManagement-v4.0.0.swagger.json
      version: 4
    - apitype: openapi
      developerUI: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/PromotionManagement/v4/docs
      id: TMF688
      implementation: /{{.Release.Name}}-PromotionManagement
      name: Event
      path: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/PromotionManagement/v4
      port: 8080
      required: false
      resources:
      - event:
        - POST
      - hub:
        - POST
        - DELETE
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF671_Promotion/master/TMF671-Promotion-v4.0.0.swagger.json
      version: 4
    publishedEvents:
    - apitype: openapi
      implementation: /{{.Release.Name}}-userrole&permapi
      name: userRole
      port: 80
      resources:
      - permission:
        - permissionCreateEvent
        - permissionAttributeValueChangeEvent
        - permissionStateChangeEvent
        - permissionDeleteEvent
      - userRole:
        - userRoleCreateEvent
        - userRoleAttributeValueChangeEvent
        - userRoleStateChangeEvent
        - userRoleDeleteEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF672_UserRoleAndPermission/master/TMF672-UserRoleAndPermission-v4.0.0.swagger.json
    - apitype: openapi
      implementation: /{{.Release.Name}}-partyroleapi
      name: partyRole
      port: 80
      resources:
      - partyRole:
        - PartyRoleCreateEvent
        - PartyRoleAttributeValueChangeEvent
        - PartyRoleStateChangeEvent
        - PartyRoleDeleteEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF669_PartyRoleManagement/master/TMF672-PartyRoleManagement-v4.0.0.swagger.json
    subscribedEvents:
    - apitype: openapi
      implementation: /{{.Release.Name}}-PartyManagement
      name: PartyManagement
      port: 80
      resources:
        Individual:
        - individualCreateEvent
        - individualAttributeValueChangeEvent
        - individualStateChangeEvent
        Organization:
        - organizationCreateEvenet
        - organizationAttributeValueChangeEvent
        - organizationStateChangeEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF632_PartyManagement/master/TMF632-PartyManagement-v4.0.0.swagger.json
    - apitype: openapi
      implementation: /{{.Release.Name}}-ProcessFlowManagement
      name: ProcessFlowManagement
      port: 80
      resources:
        ProcessFlowManagement:
        - processFlowCreateEvent
        - processFlowStateChangeEvent
        - taskFlowCreateEvent
        - taskFlowStateChangeEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF701_ProcessFlow/master/TMF701-ProcessFlow-v4.0.0.swagger.json
  description: 'Party Roles & Permissions Management component aims to manage and
    expose, roles and related permissions. Permissions Management component allows
    to: create, modify and delete permissions. delegate permissions. When a specific
    role is assigned, a set of permissions is inherited.'
  functionalBlock: PartyManagement
  id: TMFC035
  maintainers:
  - email: matteo.destino@accenture.com
    name: Matteo Destino
  managementFunction: []
  name: PermissionsManagement
  owners:
  - email: matteo.destino@accenture.com
    name: Matteo Destino
  publicationDate: 2023-08-18 00:00:00+00:00
  securityFunction: []
  status: specified
  version: 1.1.1
