{"info":{"_postman_id":"f5513116-82f3-4454-9a92-2e18bb8279e4","name":"CTK-Appointment-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","_exporter_id":"7503975","_collection_link":"https://cloudy-meadow-674386.postman.co/workspace/v4.0.0CTKs~c3a3165b-0479-4ccd-bebb-f737fd593b7f/collection/7503975-f5513116-82f3-4454-9a92-2e18bb8279e4?action=share&source=collection_link&creator=7503975"},"item":[{"name":"N1","item":[{"name":"/appointment","event":[{"listen":"test","script":{"exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","pm.test('Response has validFor attribute', function(){ pm.expect(instance[\"validFor\"]).to.be.a('object')})","","pm.globals.set('IDAP01', instance['id']);","pm.globals.set('HREFAP01', instance['href']);","pm.globals.set('EXTERNALIDAP01', instance['externalId']);","pm.globals.set('DESCRIPTIONAP01', instance['description']);","pm.globals.set('CATEGORYAP01', instance['category']);","pm.globals.set('CREATIONDATEAP01', instance['creationDate']);","pm.globals.set('LASTUPDATEAP01', instance['lastUpdate']);","pm.globals.set('STATUSAP01', instance['status']);","","pm.globals.set('@BASETYPEAP01', instance['@baseType']);","pm.globals.set('@TYPEAP01', instance['@type']);","pm.globals.set('@SCHEMALOCATIONAP01', instance['@schemaLocation']);","pm.globals.set('ATTACHMENTAP01', instance['attachment']);","pm.globals.set('CALENDAREVENTAP01', instance['calendarEvent']);","pm.globals.set('CONTACTMEDIUMAP01', instance['contactMedium']);","pm.globals.set('NOTEAP01', instance['note']);","pm.globals.set('RELATEDENTITYAP01', instance['relatedEntity']);","pm.globals.set('RELATEDPARTYAP01', instance['relatedParty']);","pm.globals.set('RELATEDPLACEAP01', instance['relatedPlace']);","","","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on creationDate', function () {","  pm.expect(pm.response.text()).to.include(instance['creationDate']);","});","pm.test('Body includes value held on lastUpdate', function () {","  pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","});","pm.test('Body includes value held on status', function () {","  pm.expect(pm.response.text()).to.include(instance['status']);","});","pm.test('Body includes value held on startDateTime', function () {","  pm.expect(pm.response.text()).to.include(instance['validFor'][\"startDateTime\"]);","});","pm.test('Body includes value held on endDateTime', function () {","  pm.expect(pm.response.text()).to.include(instance['validFor'][\"endDateTime\"]);","});","","",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"validFor\": {\n    \"startDateTime\": \"2018-02-15T14:00:00.000Z\",\n    \"endDateTime\": \"2018-02-15T16:00:00.000Z\"\n  }\n}"},"url":{"raw":"{{Appointment_API}}appointment","host":["{{Appointment_API}}appointment"]},"description":"This operation creates a appointment"},"response":[]},{"name":"/appointment","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","     ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP02');});","            pm.test('href is ' + pm.globals.get(\"HREFAP02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP02');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP02\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP02');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP02');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP02');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP02\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP02');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP02\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP02');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP02');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP02\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP02');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP02\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP02');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP02\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP02');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP02\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP02');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP02\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP02');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP02\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP02');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP02');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP02');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP02');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP02\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","     ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","     ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP02');});","            pm.test('href is ' + pm.globals.get(\"HREFAP02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP02');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP02\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP02');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP02');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP02');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP02\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP02');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP02\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP02');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP02');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP02\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP02');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP02\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP02');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP02\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP02');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP02\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP02');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP02\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP02');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP02\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP02');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP02');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP02');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP02');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP02\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment","host":["{{Appointment_API}}appointment"]},"description":"This operation search for the created appointment"},"response":[]},{"name":"/appointment/{{IDAP01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","     ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","     ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment/{{IDAP01}}","host":["{{Appointment_API}}appointment"],"path":["{{IDAP01}}"]},"description":"This operation search for one of the created appointment"},"response":[]}]},{"name":"N2","item":[{"name":"/appointment?fields=id","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?fields=id","host":["{{Appointment_API}}appointment"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?id={{IDAP01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?id={{IDAP01}}","host":["{{Appointment_API}}appointment"],"query":[{"key":"id","value":"{{IDAP01}}"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?fields=creationDate","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?fields=creationDate","host":["{{Appointment_API}}appointment"],"query":[{"key":"fields","value":"creationDate"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?creationDate={{CREATIONDATEAP01}}","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?creationDate={{CREATIONDATEAP01}}","host":["{{Appointment_API}}appointment"],"query":[{"key":"creationDate","value":"{{CREATIONDATEAP01}}"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?fields=lastUpdate","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?fields=lastUpdate","host":["{{Appointment_API}}appointment"],"query":[{"key":"fields","value":"lastUpdate"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?lastUpdate={{LASTUPDATEAP01}}","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?lastUpdate={{LASTUPDATEAP01}}","host":["{{Appointment_API}}appointment"],"query":[{"key":"lastUpdate","value":"{{LASTUPDATEAP01}}"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?fields=status","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?fields=status","host":["{{Appointment_API}}appointment"],"query":[{"key":"fields","value":"status"}]},"description":"This operation filter a appointment"},"response":[]},{"name":"/appointment?status={{STATUSAP01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","      ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['validFor', 'id', 'href', 'creationDate', 'lastUpdate', 'status', 'validFor'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has lastUpdate attribute', function() { pm.expect(instance[\"lastUpdate\"]).to.be.a('string'); });","      ","     ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on lastUpdate', function () {","            pm.expect(pm.response.text()).to.include(instance['lastUpdate']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","     ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAP01\")) {","            pm.test('id is ' + pm.globals.get(\"IDAP01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAP01');});","            pm.test('href is ' + pm.globals.get(\"HREFAP01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAP01');});","            pm.test('externalId is ' + pm.globals.get(\"EXTERNALIDAP01\"), function() {pm.expect(instance['externalId']) == pm.globals.get('EXTERNALIDAP01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONAP01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONAP01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYAP01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYAP01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATEAP01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATEAP01');});","            pm.test('lastUpdate is ' + pm.globals.get(\"LASTUPDATEAP01\"), function() {pm.expect(instance['lastUpdate']) == pm.globals.get('LASTUPDATEAP01');});","            pm.test('status is ' + pm.globals.get(\"STATUSAP01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSAP01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEAP01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEAP01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPEAP01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPEAP01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONAP01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONAP01');});","            pm.test('attachment is ' + pm.globals.get(\"ATTACHMENTAP01\"), function() {pm.expect(instance['attachment']) == pm.globals.get('ATTACHMENTAP01');});","            pm.test('calendarEvent is ' + pm.globals.get(\"CALENDAREVENTAP01\"), function() {pm.expect(instance['calendarEvent']) == pm.globals.get('CALENDAREVENTAP01');});","            pm.test('contactMedium is ' + pm.globals.get(\"CONTACTMEDIUMAP01\"), function() {pm.expect(instance['contactMedium']) == pm.globals.get('CONTACTMEDIUMAP01');});","            pm.test('note is ' + pm.globals.get(\"NOTEAP01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTEAP01');});","            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYAP01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYAP01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYAP01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYAP01');});","            pm.test('relatedPlace is ' + pm.globals.get(\"RELATEDPLACEAP01\"), function() {pm.expect(instance['relatedPlace']) == pm.globals.get('RELATEDPLACEAP01');});","        }","        if (instance.id == pm.globals.get(\"IDAP02\")) {","            pm.test('IDAP02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment?status={{STATUSAP01}}","host":["{{Appointment_API}}appointment"],"query":[{"key":"status","value":"{{STATUSAP01}}"}]},"description":"This operation filter a appointment"},"response":[]}]},{"name":"E1","item":[{"name":"/appointment/404ID","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Appointment_API}}appointment/ef69ce4f-7045-45ca-ac56-d97cd536d0ce","host":["{{Appointment_API}}appointment"],"path":["ef69ce4f-7045-45ca-ac56-d97cd536d0ce"]},"description":"This operation search for one of the created appointment"},"response":[]}]}]}