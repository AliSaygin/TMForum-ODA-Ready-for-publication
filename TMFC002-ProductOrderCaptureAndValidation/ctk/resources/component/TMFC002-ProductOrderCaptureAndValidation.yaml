---
# Source: tmfc002-productordercaptureandvalidation/templates/PersistentVolumeClaim-0.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-mongodb-pv-claim'
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: tmfc002-productordercaptureandvalidation/templates/Service-0.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-product-ordering-management-api'
spec:
  ports:
  - name: tcp-release-name-product
    port: 8080
    targetPort: 'release-name-product'
  selector:
    impl: 'release-name-product-ordering-management-api'
---
# Source: tmfc002-productordercaptureandvalidation/templates/Service-1.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-quote-management-api'
spec:
  ports:
  - name: tcp-release-name-quote-m
    port: 8080
    targetPort: 'release-name-quote-m'
  selector:
    impl: 'release-name-quote-management-api'
---
# Source: tmfc002-productordercaptureandvalidation/templates/Service-2.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-shopping-cart-management-api'
spec:
  ports:
  - name: tcp-release-name-shoppin
    port: 8080
    targetPort: 'release-name-shoppin'
  selector:
    impl: 'release-name-shopping-cart-management-api'
---
# Source: tmfc002-productordercaptureandvalidation/templates/Service-3.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-party-role-management-api'
spec:
  ports:
  - name: tcp-release-name-party-r
    port: 8080
    targetPort: 'release-name-party-r'
  selector:
    impl: 'release-name-party-role-management-api'
---
# Source: tmfc002-productordercaptureandvalidation/templates/Service-4.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-mongodb'
spec:
  ports:
  - name: tcp-release-name-mongodb
    port: 27017
    targetPort: 'release-name-mongodb'
  selector:
    impl: 'release-name-mongodb'
---
# Source: tmfc002-productordercaptureandvalidation/templates/Deployment-0.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-product-ordering-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-product-ordering-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc002-productordercaptureandvalidation'
        impl: 'release-name-product-ordering-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc002-productordercaptureandvalidation'
        image: 'tmforumorg/tmfc002-tmf622-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-product-ordering-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-product'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/productOrderingManagement/v4/
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc002-productordercaptureandvalidation/templates/Deployment-1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-quote-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-quote-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc002-productordercaptureandvalidation'
        impl: 'release-name-quote-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc002-productordercaptureandvalidation'
        image: 'tmforumorg/tmfc002-tmf648-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-quote-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-quote-m'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/quoteManagement/v4/
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc002-productordercaptureandvalidation/templates/Deployment-2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-shopping-cart-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-shopping-cart-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc002-productordercaptureandvalidation'
        impl: 'release-name-shopping-cart-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc002-productordercaptureandvalidation'
        image: 'tmforumorg/tmfc002-tmf663-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-shopping-cart-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-shoppin'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/shoppingCart/v4/
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc002-productordercaptureandvalidation/templates/Deployment-3.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-party-role-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-party-role-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc002-productordercaptureandvalidation'
        impl: 'release-name-party-role-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc002-productordercaptureandvalidation'
        image: 'tmforumorg/tmfc002-tmf669-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-party-role-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-party-r'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/partyRoleManagement/v4/
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc002-productordercaptureandvalidation/templates/Deployment-4.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-mongodb'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-mongodb'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc002-productordercaptureandvalidation'
        impl: 'release-name-mongodb'
        version: mongo-5.0.1
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc002-productordercaptureandvalidation'
        image: mongo:5.0.1
        imagePullPolicy: Always
        name: 'release-name-mongodb'
        ports:
        - containerPort: 27017
          name: 'release-name-mongodb'
        volumeMounts:
        - mountPath: /data/db
          name: 'release-name-mongodb-pv-storage'
      volumes:
      - name: 'release-name-mongodb-pv-storage'
        persistentVolumeClaim:
          claimName: 'release-name-mongodb-pv-claim'
---
# Source: tmfc002-productordercaptureandvalidation/templates/component-0.yaml
apiVersion: oda.tmforum.org/v1beta2
kind: component
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc002-productordercaptureandvalidation'
  name: 'release-name-tmfc002-productordercaptureandvalidation'
spec:
  coreFunction:
    dependentAPIs:
    - apitype: openapi
      name: product-catalog-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF620_Product_Catalog/4.1.0/swagger/TMF620_Product_Catalog_Management_API_v4.1.0_swagger.json
    - apitype: openapi
      name: product-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF637_Product_Inventory/4.0.0/swagger/TMF637_Product_Inventory_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: product-offering-qualification-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF679_Product_Offering_Qualification/4.0.0/swagger/TMF679_Product_Offering_Qualification_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: service-qualification-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF645_Service_Qualification/4.0.0/swagger/TMF645_Service_Qualification_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: appointment-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF646_Appointment/4.0.0/swagger/TMF646_Appointment_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: geographic-address-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF673_Geographic_Address/4.0.0/swagger/TMF673_Geographic_Address_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: geographic-site-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF674_Geographic_Site/4.0.0/swagger/TMF674_Geographic_Site_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: stock-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF687_Stock/4.0.0/swagger/TMF687_Stock_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: party-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF632_Party/4.0.0/swagger/TMF632_Party_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: party-role-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF669_Party_Role/4.0.0/swagger/TMF669_Party_Role_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: account-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF666_Account/4.0.0/swagger/TMF666_Account_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: payment-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF676_Payment/4.0.0/swagger/TMF676_Payment_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: party-interaction-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF683_Party_Interaction/4.0.0/swagger/TMF683_Party_Interaction_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: service-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF638_Service_Inventory/4.0.0/swagger/TMF638_Service_Inventory_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: resource-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF639_Resource_Inventory/4.0.0/swagger/TMF639_Resource_Inventory_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: user-role-permission-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF672_User_Role_Permission/4.0.0/swagger/TMF672_User_Role_Permission_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: customer-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF629_Customer/4.0.0/swagger/TMF629_Customer_Management_API_v4.0.0_swagger.json
    exposedAPIs:
    - apitype: openapi
      implementation: 'release-name-product-ordering-management-api'
      name: product-ordering-management-api
      path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/productOrderingManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF622_Product_Ordering/4.0.0/swagger/TMF622_Product_Ordering_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      implementation: 'release-name-quote-management-api'
      name: quote-management-api
      path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/quoteManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF648_Quote/4.0.0/swagger/TMF648_Quote_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      implementation: 'release-name-shopping-cart-management-api'
      name: shopping-cart-management-api
      path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/shoppingCart/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF663_Shopping_Cart/4.0.0/swagger/TMF663_Shopping_Cart_Management_API_v4.0.0_swagger.json
  description: Addresses the means of capturing what a customer wants to order, based
    on the CSP Product Catalog. This component permits to choose the configuration
    of the product offerings and products desired, to provide a quote, to check the
    eligibility of the customer order, and to complete it with information needed
    such as the related parties or associated the billing account and the delivery
    appointment if needed. This component is globally in charge of these quote management,
    order capture and validation steps, using dedicated components (e.g., Offering
    Configurator, Service Qualification, Party Mgt) when needed. After the delivery
    of the customer product order items, this component is also in charge of the commercial
    closure of the order. It includes update of the Product Inventory (status and
    starting/end date of tariffs and discounts) and potential commercial rules control
    (e.g. receipt of the contract document signed by the customer)
  functionalBlock: CoreCommerce
  id: TMFC002
  maintainers:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  managementFunction:
    exposedAPIs:
    - apitype: prometheus
      implementation: 'release-name-tmfc002-productordercaptureandvalidation-sm'
      name: metrics
      path: /release-name-tmfc002-productordercaptureandvalidation/metrics
      port: 4000
  name: ProductOrderCaptureAndValidation
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: '2023-08-18T00:00:00.000Z'
  securityFunction:
    controllerRole: 'admin'
    exposedAPIs:
    - apitype: openapi
      implementation: 'release-name-party-role-management-api'
      name: party-role-management-api
      path: /release-name-tmfc002-productordercaptureandvalidation/tmf-api/partyRoleManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF669_Party_Role/4.0.0/swagger/TMF669_Party_Role_Management_API_v4.0.0_swagger.json
  status: specified
  version: 1.1.1
