---
# Source: tmfc008-serviceinventory/templates/PersistentVolumeClaim-0.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-mongodb-pv-claim'
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: tmfc008-serviceinventory/templates/Service-0.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-service-inventory-management-api'
spec:
  ports:
  - name: tcp-release-name-service
    port: 8080
    targetPort: 'release-name-service'
  selector:
    impl: 'release-name-service-inventory-management-api'
---
# Source: tmfc008-serviceinventory/templates/Service-1.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-party-role-management-api'
spec:
  ports:
  - name: tcp-release-name-party-r
    port: 8080
    targetPort: 'release-name-party-r'
  selector:
    impl: 'release-name-party-role-management-api'
---
# Source: tmfc008-serviceinventory/templates/Service-2.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-mongodb'
spec:
  ports:
  - name: tcp-release-name-mongodb
    port: 27017
    targetPort: 'release-name-mongodb'
  selector:
    impl: 'release-name-mongodb'
---
# Source: tmfc008-serviceinventory/templates/Deployment-0.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-service-inventory-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-service-inventory-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc008-serviceinventory'
        impl: 'release-name-service-inventory-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc008-serviceinventory'
        image: 'tmforumorg/tmfc008-tmf638-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-service-inventory-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-service'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc008-serviceinventory/tmf-api/serviceInventory/v4
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc008-serviceinventory/templates/Deployment-1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-party-role-management-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-party-role-management-api'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc008-serviceinventory'
        impl: 'release-name-party-role-management-api'
        version: v4.0.0
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc008-serviceinventory'
        image: 'tmforumorg/tmfc008-tmf669-v4.0.0:latest'
        imagePullPolicy: Always
        name: 'release-name-party-role-management-api'
        ports:
        - containerPort: 8080
          name: 'release-name-party-r'
        resources:
          limits:
            cpu: '0.5'
            memory: 900Mi
          requests:
            cpu: '0.1'
            memory: 600Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /release-name-tmfc008-serviceinventory/tmf-api/partyRoleManagement/v4/
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Source: tmfc008-serviceinventory/templates/Deployment-2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-mongodb'
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: 'release-name-mongodb'
  template:
    metadata:
      labels:
        app: 'release-name-tmfc008-serviceinventory'
        impl: 'release-name-mongodb'
        version: mongo-5.0.1
    spec:
      containers:
      - env:
        - name: MONGO_SERVICE_HOST
          value: 'release-name-mongodb'
        - name: RELEASE_NAME
          value: 'release-name'
        - name: COMPONENT_NAME
          value: 'release-name-tmfc008-serviceinventory'
        image: mongo:5.0.1
        imagePullPolicy: Always
        name: 'release-name-mongodb'
        ports:
        - containerPort: 27017
          name: 'release-name-mongodb'
        volumeMounts:
        - mountPath: /data/db
          name: 'release-name-mongodb-pv-storage'
      volumes:
      - name: 'release-name-mongodb-pv-storage'
        persistentVolumeClaim:
          claimName: 'release-name-mongodb-pv-claim'
---
# Source: tmfc008-serviceinventory/templates/component-0.yaml
apiVersion: oda.tmforum.org/v1beta2
kind: component
metadata:
  labels:
    oda.tmforum.org/componentName: 'release-name-tmfc008-serviceinventory'
  name: 'release-name-tmfc008-serviceinventory'
spec:
  coreFunction:
    dependentAPIs:
    - apitype: openapi
      name: service-catalog-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF633_Service_Catalog/4.0.0/swagger/TMF633_Service_Catalog_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: party-role-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF669_Party_Role/4.0.0/swagger/TMF669_Party_Role_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: resource-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF639_Resource_Inventory/4.0.0/swagger/TMF639_Resource_Inventory_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: service-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF638_Service_Inventory/4.0.0/swagger/TMF638_Service_Inventory_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: geographic-address-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF673_Geographic_Address/4.0.0/swagger/TMF673_Geographic_Address_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: geographic-site-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF674_Geographic_Site/4.0.0/swagger/TMF674_Geographic_Site_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: user-role-permission-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF672_User_Role_Permission/4.0.0/swagger/TMF672_User_Role_Permission_Management_API_v4.0.0_swagger.json
    - apitype: openapi
      name: party-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF632_Party/4.0.0/swagger/TMF632_Party_Management_API_v4.0.0_swagger.json
    exposedAPIs:
    - apitype: openapi
      implementation: 'release-name-service-inventory-management-api'
      name: service-inventory-management-api
      path: /release-name-tmfc008-serviceinventory/tmf-api/serviceInventory/v4
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF638_Service_Inventory/4.0.0/swagger/TMF638_Service_Inventory_Management_API_v4.0.0_swagger.json
  description: Service Inventory component is responsible for storage and exposure
    of CFS (Customer Facing Service) that are associated to Product Inventory items.
    It is also responsible for RFS (Resource Facing Service) definition, mapping between
    CFS and RFS and mapping with infrastructure/network resources. Service Inventory
    component has functionality that enables inventory items creation, inventory organization,
    inventory search or filter, inventory monitoring and tracking, inventory control
    and inventory auditing.The minimum check to be performed at inventory items creation
    or update is the global consistency with related Service Catalog information.
  functionalBlock: Production
  id: TMFC008
  maintainers:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  managementFunction:
    exposedAPIs:
    - apitype: prometheus
      implementation: 'release-name-tmfc008-serviceinventory-sm'
      name: metrics
      path: /release-name-tmfc008-serviceinventory/metrics
      port: 4000
  name: ServiceInventory
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: '2023-08-18T00:00:00.000Z'
  securityFunction:
    controllerRole: 'admin'
    exposedAPIs:
    - apitype: openapi
      implementation: 'release-name-party-role-management-api'
      name: party-role-management-api
      path: /release-name-tmfc008-serviceinventory/tmf-api/partyRoleManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/TMF669_Party_Role/4.0.0/swagger/TMF669_Party_Role_Management_API_v4.0.0_swagger.json
  status: specified
  version: 1.1.0
